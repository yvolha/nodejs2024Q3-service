generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @unique @default(uuid())
  login     String
  password  String
  version   Int      @default(1)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Album {
  id       String  @id @unique @default(uuid())
  name     String
  year     Int
  artist   Artist? @relation(fields: [artistId], references: [id], onDelete: SetNull)
  artistId String? @unique
  track    Track[]
  favs     Favs?   @relation(fields: [favsId], references: [id])
  favsId   String
}

model Artist {
  id     String  @id @unique @default(uuid())
  name   String
  grammy Boolean
  favs   Favs?   @relation(fields: [favsId], references: [id])
  favsId String?
  album  Album[]
  track  Track[]
}

model Track {
  id       String  @id @unique @default(uuid())
  name     String
  artist   Artist? @relation(fields: [artistId], references: [id], onDelete: SetNull)
  artistId String? @unique
  album    Album?  @relation(fields: [albumId], references: [id], onDelete: SetNull)
  albumId  String? @unique
  duration Int
  favs     Favs?   @relation(fields: [favsId], references: [id])
  favsId   String?
}

model Favs {
  id      String   @id @unique
  tracks  Track[]
  artists Artist[]
  albums  Album[]
}